# Nome do Workflow que aparecerá no separador "Actions" do GitHub.
name: Java CI with Maven

# Define os gatilhos: quando esta ação deve ser executada.
on:
  # Executa sempre que houver um push para a branch 'main'.
  push:
    branches: [ "main" ]
  # Executa sempre que um pull request for aberto para a branch 'main'.
  pull_request:
    branches: [ "main" ]

# Define os "trabalhos" (jobs) que serão executados.
jobs:
  build:
    # O tipo de máquina virtual que será usada para executar o trabalho.
    runs-on: ubuntu-latest

    # Os passos que compõem o trabalho.
    steps:
      # 1. Faz o "checkout" do seu código do repositório para a máquina virtual.
      - uses: actions/checkout@v3
      
      # 2. Configura o ambiente Java (JDK).
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17' # Garante que a versão do Java é a mesma do nosso projeto.
          distribution: 'temurin' # Usa a distribuição Temurin, a mesma que usamos localmente.
          cache: maven
      
      # 3. Executa o build com o Maven.
      # O comando 'package' do Maven compila o código e, por padrão,
      # executa todos os testes que encontrar no diretório src/test.
      # Se qualquer teste falhar, este passo falha e o workflow para.
      - name: Build and test with Maven
        run: mvn -B package --file pom.xml
